{"version":3,"sources":["main.js"],"names":["btnListWrapper","document","querySelector","modalText","modal","yourChoiceCardRender","computerCardRender","yourHp","computerHp","scoreLine","cardsDb","name","breaks","img","playersDb","you","hp","choice","choiceNumber","computer","renderHp","renderCards","playBtns","querySelectorAll","addEventListener","event","target","classList","contains","disableButtons","console","log","forEach","item","i","generateYourChoice","generateComputerChoice","renderChoiceCards","setTimeout","determinateWinner","remove","resetChoiceCards","enableButtons","yourChoice","computerChoiceNumber","randomInteger","computerChoice","min","max","rand","Math","random","round","a","b","c","add","className","includes","innerText","location","reload","innerHTML","style","width"],"mappings":"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","file":"main.js","sourcesContent":["let btnListWrapper = document.querySelector(\".play-buttons__button-list\"),\n  modalText = document.querySelector(\".modal__text\"),\n  modal = document.querySelector(\".modal\"),\n  yourChoiceCardRender = document.querySelector(\".play-board__card--you\"),\n  computerCardRender = document.querySelector(\".play-board__card--computer\"),\n  yourHp = document.querySelector(\".users__user-hp--you\"),\n  computerHp = document.querySelector(\".users__user-hp--computer\"),\n  scoreLine = document.querySelector(\".score-line__line\"),\n  cardsDb = [\n    {\n      name: \"rock\",\n      breaks: [`scissors`],\n      img: \"img/rock.png\",\n    },\n    {\n      name: \"paper\",\n      breaks: [`rock`],\n      img: \"img/paper.png\",\n    },\n    {\n      name: \"scissors\",\n      breaks: [`paper`],\n      img: \"img/scissors.png\",\n    },\n  ],\n  playersDb = {\n    you: {\n      hp: 2,\n      choice: \"\",\n      choiceNumber: \"\",\n    },\n    computer: {\n      hp: 2,\n      choice: \"\",\n      choiceNumber: \"\",\n    },\n  };\n\n// Изначальный рендер жизней\nrenderHp();\n\nrenderCards();\nlet playBtns = btnListWrapper.querySelectorAll(\".play-buttons__button\");\n\n// Событие выбора карточки\nbtnListWrapper.addEventListener(\"click\", (event) => {\n  // console.log(event.target);\n  if (event.target.classList.contains(\"play-buttons__button\")) {\n    disableButtons();\n    console.log(\"Buttons is disabled\");\n    playBtns.forEach((item, i) => {\n      if (event.target === item) {\n        playersDb.you.choice = generateYourChoice(i);\n        playersDb.you.choiceNumber = i;\n        playersDb.computer.choiceNumber = generateComputerChoice();\n        playersDb.computer.choice =\n          cardsDb[playersDb.computer.choiceNumber].name;\n        renderChoiceCards(\n          playersDb.you.choiceNumber,\n          playersDb.computer.choiceNumber\n        );\n        setTimeout(\n          determinateWinner,\n          1500,\n          playersDb.you.choiceNumber,\n          playersDb.computer.choice,\n          playersDb.you.choice\n        );\n      }\n    });\n  }\n});\n\n// Событие закрытия модального окна\nmodal.addEventListener(\"click\", () => {\n  modal.classList.remove(\"modal--visible\");\n  resetChoiceCards();\n  enableButtons();\n});\n\n// Генерация вашего варианта\nfunction generateYourChoice(i) {\n  let yourChoice = cardsDb[i].name;\n  console.log(`You choose ${yourChoice}`);\n  return yourChoice;\n}\n\n// Генерация варианта компьютера\nfunction generateComputerChoice() {\n  let computerChoiceNumber = randomInteger(0.5, 2);\n  // console.log(computerChoiceNumber);\n  let computerChoice = cardsDb[computerChoiceNumber].name;\n  console.log(`Computer choose ${computerChoice}`);\n  return computerChoiceNumber;\n}\n\n// Генерация рандомного числа\nfunction randomInteger(min, max) {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  return Math.round(rand);\n}\n\n// Определение победителя\nfunction determinateWinner(a, b, c) {\n  modal.classList.add(\"modal--visible\");\n  modalText.className = \"modal__text\";\n  if (cardsDb[a].breaks.includes(b)) {\n    modalText.classList.add(\"modal__text--win\");\n    playersDb.you.hp++;\n    playersDb.computer.hp--;\n    console.log(`You have ${playersDb.you.hp} hp`);\n    console.log(`Computer have ${playersDb.computer.hp} hp`);\n    if (playersDb.computer.hp === 0) {\n      modalText.innerText = \"!!! TOTAL WIN !!!\";\n      console.log(\"total win\");\n      setTimeout(() => {\n        location.reload();\n      }, 2500);\n    } else {\n      console.log(\"win\");\n      modalText.innerText = \"You win!!!\";\n    }\n  } else if (c === b) {\n    console.log(\"nobody\");\n    modalText.innerText = \"Nobody\";\n    modalText.classList.add(\"modal__text--nobody\");\n    console.log(`You have ${playersDb.you.hp} hp`);\n    console.log(`Computer have ${playersDb.computer.hp} hp`);\n  } else {\n    modalText.classList.add(\"modal__text--lose\");\n    playersDb.you.hp--;\n    playersDb.computer.hp++;\n    console.log(`You have ${playersDb.you.hp} hp`);\n    console.log(`Computer have ${playersDb.computer.hp} hp`);\n    if (playersDb.you.hp === 0) {\n      modalText.innerText = \"!!! TOTAL LOSE !!!\";\n      console.log(\"total lose\");\n      setTimeout(() => {\n        location.reload();\n      }, 2500);\n    } else {\n      modalText.innerText = \"You lose ;(\";\n      console.log(\"lose\");\n    }\n  }\n  renderHp();\n}\n\n// Рендерим результаты на странице\nfunction renderChoiceCards(a, b) {\n  yourChoiceCardRender.innerHTML =\n    '<img src=\"' + cardsDb[a].img + '\" alt=\"\" class=\"play-buttons__img\" />';\n  computerCardRender.innerHTML =\n    '<img src=\"' + cardsDb[b].img + '\" alt=\"\" class=\"play-buttons__img\" />';\n}\n\n// Возвращаем стандартные картинки вместо выбранных\nfunction resetChoiceCards() {\n  yourChoiceCardRender.innerHTML =\n    '<img src=\"img/question.png\" alt=\"\" class=\"play-buttons__img\" />';\n  computerCardRender.innerHTML =\n    '<img src=\"img/question.png\" alt=\"\" class=\"play-buttons__img\" />';\n}\n\n// Отключение кнопок после, защита от спама\nfunction disableButtons() {\n  playBtns.forEach((item) => {\n    item.classList.add(\"play-buttons__button--disabled\");\n  });\n}\n\n// Включение кнопок после, защита от спама\nfunction enableButtons() {\n  playBtns.forEach((item) => {\n    item.classList.remove(\"play-buttons__button--disabled\");\n  });\n}\n\n// Рендерим значения и полоску хп\nfunction renderHp() {\n  yourHp.innerText = playersDb.you.hp;\n  computerHp.innerText = playersDb.computer.hp;\n  scoreLine.style.width =\n    (playersDb.you.hp * 100) / (playersDb.you.hp + playersDb.computer.hp) + `%`;\n}\n\nfunction renderCards() {\n  cardsDb.forEach((item) => {\n    btnListWrapper.innerHTML +=\n      '<div class=\"play-buttons__button\" style=\"background: url(' +\n      item.img +\n      ')  0 0/contain no-repeat\"></div>';\n  });\n}\n"]}